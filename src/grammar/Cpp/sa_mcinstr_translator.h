/*
 * This file was auto-generated by speedy-antlr-tool v1.4.3
 *  https://github.com/amykyta3/speedy-antlr-tool
 */

#pragma once

#include "McInstrBaseVisitor.h"
#include "speedy_antlr.h"

class SA_McInstrTranslator : public McInstrBaseVisitor {
    speedy_antlr::Translator *translator;

    // Cached context classes
    PyObject *ProgContext_cls = NULL;
    PyObject *Instrument_definitionContext_cls = NULL;
    PyObject *Instrument_parametersContext_cls = NULL;
    PyObject *InstrumentParameterIntegerContext_cls = NULL;
    PyObject *InstrumentParameterDoubleContext_cls = NULL;
    PyObject *InstrumentParameterStringContext_cls = NULL;
    PyObject *Instrument_parameter_unitContext_cls = NULL;
    PyObject *Instrument_traceContext_cls = NULL;
    PyObject *Instrument_metadataContext_cls = NULL;
    PyObject *Instrument_trace_includeContext_cls = NULL;
    PyObject *Component_instanceContext_cls = NULL;
    PyObject *InstanceNameCopyIdentifierContext_cls = NULL;
    PyObject *InstanceNameCopyContext_cls = NULL;
    PyObject *InstanceNameIdentifierContext_cls = NULL;
    PyObject *ComponentTypeIdentifierContext_cls = NULL;
    PyObject *ComponentTypeCopyContext_cls = NULL;
    PyObject *Instance_parametersContext_cls = NULL;
    PyObject *InstanceParameterExprContext_cls = NULL;
    PyObject *InstanceParameterNullContext_cls = NULL;
    PyObject *InstanceParameterVectorContext_cls = NULL;
    PyObject *SplitContext_cls = NULL;
    PyObject *WhenContext_cls = NULL;
    PyObject *PlaceContext_cls = NULL;
    PyObject *OrientationContext_cls = NULL;
    PyObject *GrouprefContext_cls = NULL;
    PyObject *JumpsContext_cls = NULL;
    PyObject *JumpContext_cls = NULL;
    PyObject *JumpPreviousContext_cls = NULL;
    PyObject *JumpMyselfContext_cls = NULL;
    PyObject *JumpIdentifierContext_cls = NULL;
    PyObject *JumpNextContext_cls = NULL;
    PyObject *ExtendContext_cls = NULL;
    PyObject *Component_refContext_cls = NULL;
    PyObject *CoordsContext_cls = NULL;
    PyObject *ReferenceContext_cls = NULL;
    PyObject *DependencyContext_cls = NULL;
    PyObject *DeclareBlockContext_cls = NULL;
    PyObject *DeclareBlockCopyContext_cls = NULL;
    PyObject *UservarsContext_cls = NULL;
    PyObject *InitializeBlockContext_cls = NULL;
    PyObject *InitializeBlockCopyContext_cls = NULL;
    PyObject *SaveBlockCopyContext_cls = NULL;
    PyObject *SaveBlockContext_cls = NULL;
    PyObject *FinallyBlockContext_cls = NULL;
    PyObject *FinallyBlockCopyContext_cls = NULL;
    PyObject *MetadataContext_cls = NULL;
    PyObject *CategoryContext_cls = NULL;
    PyObject *InitializerlistContext_cls = NULL;
    PyObject *AssignmentContext_cls = NULL;
    PyObject *ExpressionBinaryModContext_cls = NULL;
    PyObject *ExpressionBinaryLessContext_cls = NULL;
    PyObject *ExpressionBinaryGreaterContext_cls = NULL;
    PyObject *ExpressionBinaryLessEqualContext_cls = NULL;
    PyObject *ExpressionArrayAccessContext_cls = NULL;
    PyObject *ExpressionBinaryLogicContext_cls = NULL;
    PyObject *ExpressionIntegerContext_cls = NULL;
    PyObject *ExpressionBinaryRightShiftContext_cls = NULL;
    PyObject *ExpressionMyselfContext_cls = NULL;
    PyObject *ExpressionPreviousContext_cls = NULL;
    PyObject *ExpressionIdentifierContext_cls = NULL;
    PyObject *ExpressionStructAccessContext_cls = NULL;
    PyObject *ExpressionFunctionCallContext_cls = NULL;
    PyObject *ExpressionBinaryMDContext_cls = NULL;
    PyObject *ExpressionStringContext_cls = NULL;
    PyObject *ExpressionGroupingContext_cls = NULL;
    PyObject *ExpressionExponentiationContext_cls = NULL;
    PyObject *ExpressionBinaryLeftShiftContext_cls = NULL;
    PyObject *ExpressionBinaryGreaterEqualContext_cls = NULL;
    PyObject *ExpressionZeroContext_cls = NULL;
    PyObject *ExpressionUnaryPMContext_cls = NULL;
    PyObject *ExpressionTrinaryLogicContext_cls = NULL;
    PyObject *ExpressionFloatContext_cls = NULL;
    PyObject *ExpressionPointerAccessContext_cls = NULL;
    PyObject *ExpressionBinaryEqualContext_cls = NULL;
    PyObject *ExpressionBinaryPMContext_cls = NULL;
    PyObject *ExpressionUnaryLogicContext_cls = NULL;
    PyObject *ShellContext_cls = NULL;
    PyObject *SearchPathContext_cls = NULL;
    PyObject *SearchShellContext_cls = NULL;
    PyObject *Unparsed_blockContext_cls = NULL;

    public:
    SA_McInstrTranslator(speedy_antlr::Translator *translator);
    ~SA_McInstrTranslator();
    antlrcpp::Any visitProg(McInstrParser::ProgContext *ctx);

    antlrcpp::Any visitInstrument_definition(McInstrParser::Instrument_definitionContext *ctx);

    antlrcpp::Any visitInstrument_parameters(McInstrParser::Instrument_parametersContext *ctx);

    antlrcpp::Any visitInstrumentParameterInteger(McInstrParser::InstrumentParameterIntegerContext *ctx);

    antlrcpp::Any visitInstrumentParameterDouble(McInstrParser::InstrumentParameterDoubleContext *ctx);

    antlrcpp::Any visitInstrumentParameterString(McInstrParser::InstrumentParameterStringContext *ctx);

    antlrcpp::Any visitInstrument_parameter_unit(McInstrParser::Instrument_parameter_unitContext *ctx);

    antlrcpp::Any visitInstrument_trace(McInstrParser::Instrument_traceContext *ctx);

    antlrcpp::Any visitInstrument_metadata(McInstrParser::Instrument_metadataContext *ctx);

    antlrcpp::Any visitInstrument_trace_include(McInstrParser::Instrument_trace_includeContext *ctx);

    antlrcpp::Any visitComponent_instance(McInstrParser::Component_instanceContext *ctx);

    antlrcpp::Any visitInstanceNameCopyIdentifier(McInstrParser::InstanceNameCopyIdentifierContext *ctx);

    antlrcpp::Any visitInstanceNameCopy(McInstrParser::InstanceNameCopyContext *ctx);

    antlrcpp::Any visitInstanceNameIdentifier(McInstrParser::InstanceNameIdentifierContext *ctx);

    antlrcpp::Any visitComponentTypeIdentifier(McInstrParser::ComponentTypeIdentifierContext *ctx);

    antlrcpp::Any visitComponentTypeCopy(McInstrParser::ComponentTypeCopyContext *ctx);

    antlrcpp::Any visitInstance_parameters(McInstrParser::Instance_parametersContext *ctx);

    antlrcpp::Any visitInstanceParameterExpr(McInstrParser::InstanceParameterExprContext *ctx);

    antlrcpp::Any visitInstanceParameterNull(McInstrParser::InstanceParameterNullContext *ctx);

    antlrcpp::Any visitInstanceParameterVector(McInstrParser::InstanceParameterVectorContext *ctx);

    antlrcpp::Any visitSplit(McInstrParser::SplitContext *ctx);

    antlrcpp::Any visitWhen(McInstrParser::WhenContext *ctx);

    antlrcpp::Any visitPlace(McInstrParser::PlaceContext *ctx);

    antlrcpp::Any visitOrientation(McInstrParser::OrientationContext *ctx);

    antlrcpp::Any visitGroupref(McInstrParser::GrouprefContext *ctx);

    antlrcpp::Any visitJumps(McInstrParser::JumpsContext *ctx);

    antlrcpp::Any visitJump(McInstrParser::JumpContext *ctx);

    antlrcpp::Any visitJumpPrevious(McInstrParser::JumpPreviousContext *ctx);

    antlrcpp::Any visitJumpMyself(McInstrParser::JumpMyselfContext *ctx);

    antlrcpp::Any visitJumpIdentifier(McInstrParser::JumpIdentifierContext *ctx);

    antlrcpp::Any visitJumpNext(McInstrParser::JumpNextContext *ctx);

    antlrcpp::Any visitExtend(McInstrParser::ExtendContext *ctx);

    antlrcpp::Any visitComponent_ref(McInstrParser::Component_refContext *ctx);

    antlrcpp::Any visitCoords(McInstrParser::CoordsContext *ctx);

    antlrcpp::Any visitReference(McInstrParser::ReferenceContext *ctx);

    antlrcpp::Any visitDependency(McInstrParser::DependencyContext *ctx);

    antlrcpp::Any visitDeclareBlock(McInstrParser::DeclareBlockContext *ctx);

    antlrcpp::Any visitDeclareBlockCopy(McInstrParser::DeclareBlockCopyContext *ctx);

    antlrcpp::Any visitUservars(McInstrParser::UservarsContext *ctx);

    antlrcpp::Any visitInitializeBlock(McInstrParser::InitializeBlockContext *ctx);

    antlrcpp::Any visitInitializeBlockCopy(McInstrParser::InitializeBlockCopyContext *ctx);

    antlrcpp::Any visitSaveBlockCopy(McInstrParser::SaveBlockCopyContext *ctx);

    antlrcpp::Any visitSaveBlock(McInstrParser::SaveBlockContext *ctx);

    antlrcpp::Any visitFinallyBlock(McInstrParser::FinallyBlockContext *ctx);

    antlrcpp::Any visitFinallyBlockCopy(McInstrParser::FinallyBlockCopyContext *ctx);

    antlrcpp::Any visitMetadata(McInstrParser::MetadataContext *ctx);

    antlrcpp::Any visitCategory(McInstrParser::CategoryContext *ctx);

    antlrcpp::Any visitInitializerlist(McInstrParser::InitializerlistContext *ctx);

    antlrcpp::Any visitAssignment(McInstrParser::AssignmentContext *ctx);

    antlrcpp::Any visitExpressionBinaryMod(McInstrParser::ExpressionBinaryModContext *ctx);

    antlrcpp::Any visitExpressionBinaryLess(McInstrParser::ExpressionBinaryLessContext *ctx);

    antlrcpp::Any visitExpressionBinaryGreater(McInstrParser::ExpressionBinaryGreaterContext *ctx);

    antlrcpp::Any visitExpressionBinaryLessEqual(McInstrParser::ExpressionBinaryLessEqualContext *ctx);

    antlrcpp::Any visitExpressionArrayAccess(McInstrParser::ExpressionArrayAccessContext *ctx);

    antlrcpp::Any visitExpressionBinaryLogic(McInstrParser::ExpressionBinaryLogicContext *ctx);

    antlrcpp::Any visitExpressionInteger(McInstrParser::ExpressionIntegerContext *ctx);

    antlrcpp::Any visitExpressionBinaryRightShift(McInstrParser::ExpressionBinaryRightShiftContext *ctx);

    antlrcpp::Any visitExpressionMyself(McInstrParser::ExpressionMyselfContext *ctx);

    antlrcpp::Any visitExpressionPrevious(McInstrParser::ExpressionPreviousContext *ctx);

    antlrcpp::Any visitExpressionIdentifier(McInstrParser::ExpressionIdentifierContext *ctx);

    antlrcpp::Any visitExpressionStructAccess(McInstrParser::ExpressionStructAccessContext *ctx);

    antlrcpp::Any visitExpressionFunctionCall(McInstrParser::ExpressionFunctionCallContext *ctx);

    antlrcpp::Any visitExpressionBinaryMD(McInstrParser::ExpressionBinaryMDContext *ctx);

    antlrcpp::Any visitExpressionString(McInstrParser::ExpressionStringContext *ctx);

    antlrcpp::Any visitExpressionGrouping(McInstrParser::ExpressionGroupingContext *ctx);

    antlrcpp::Any visitExpressionExponentiation(McInstrParser::ExpressionExponentiationContext *ctx);

    antlrcpp::Any visitExpressionBinaryLeftShift(McInstrParser::ExpressionBinaryLeftShiftContext *ctx);

    antlrcpp::Any visitExpressionBinaryGreaterEqual(McInstrParser::ExpressionBinaryGreaterEqualContext *ctx);

    antlrcpp::Any visitExpressionZero(McInstrParser::ExpressionZeroContext *ctx);

    antlrcpp::Any visitExpressionUnaryPM(McInstrParser::ExpressionUnaryPMContext *ctx);

    antlrcpp::Any visitExpressionTrinaryLogic(McInstrParser::ExpressionTrinaryLogicContext *ctx);

    antlrcpp::Any visitExpressionFloat(McInstrParser::ExpressionFloatContext *ctx);

    antlrcpp::Any visitExpressionPointerAccess(McInstrParser::ExpressionPointerAccessContext *ctx);

    antlrcpp::Any visitExpressionBinaryEqual(McInstrParser::ExpressionBinaryEqualContext *ctx);

    antlrcpp::Any visitExpressionBinaryPM(McInstrParser::ExpressionBinaryPMContext *ctx);

    antlrcpp::Any visitExpressionUnaryLogic(McInstrParser::ExpressionUnaryLogicContext *ctx);

    antlrcpp::Any visitShell(McInstrParser::ShellContext *ctx);

    antlrcpp::Any visitSearchPath(McInstrParser::SearchPathContext *ctx);

    antlrcpp::Any visitSearchShell(McInstrParser::SearchShellContext *ctx);

    antlrcpp::Any visitUnparsed_block(McInstrParser::Unparsed_blockContext *ctx);

};