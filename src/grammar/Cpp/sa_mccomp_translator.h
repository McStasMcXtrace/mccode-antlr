/*
 * This file was auto-generated by speedy-antlr-tool v1.4.3
 *  https://github.com/amykyta3/speedy-antlr-tool
 */

#pragma once

#include "McCompBaseVisitor.h"
#include "speedy_antlr.h"

class SA_McCompTranslator : public McCompBaseVisitor {
    speedy_antlr::Translator *translator;

    // Cached context classes
    PyObject *ProgContext_cls = NULL;
    PyObject *ComponentDefineNewContext_cls = NULL;
    PyObject *ComponentDefineCopyContext_cls = NULL;
    PyObject *TraceBlockContext_cls = NULL;
    PyObject *TraceBlockCopyContext_cls = NULL;
    PyObject *Component_parameter_setContext_cls = NULL;
    PyObject *Component_define_parametersContext_cls = NULL;
    PyObject *Component_set_parametersContext_cls = NULL;
    PyObject *Component_out_parametersContext_cls = NULL;
    PyObject *Component_parametersContext_cls = NULL;
    PyObject *ComponentParameterSymbolContext_cls = NULL;
    PyObject *ComponentParameterDoubleArrayContext_cls = NULL;
    PyObject *ComponentParameterDoubleContext_cls = NULL;
    PyObject *ComponentParameterVectorContext_cls = NULL;
    PyObject *ComponentParameterIntegerContext_cls = NULL;
    PyObject *ComponentParameterIntegerArrayContext_cls = NULL;
    PyObject *ComponentParameterStringContext_cls = NULL;
    PyObject *ShareBlockContext_cls = NULL;
    PyObject *ShareBlockCopyContext_cls = NULL;
    PyObject *DisplayBlockCopyContext_cls = NULL;
    PyObject *DisplayBlockContext_cls = NULL;
    PyObject *Component_refContext_cls = NULL;
    PyObject *CoordsContext_cls = NULL;
    PyObject *ReferenceContext_cls = NULL;
    PyObject *DependencyContext_cls = NULL;
    PyObject *DeclareBlockContext_cls = NULL;
    PyObject *DeclareBlockCopyContext_cls = NULL;
    PyObject *UservarsContext_cls = NULL;
    PyObject *InitializeBlockContext_cls = NULL;
    PyObject *InitializeBlockCopyContext_cls = NULL;
    PyObject *SaveBlockCopyContext_cls = NULL;
    PyObject *SaveBlockContext_cls = NULL;
    PyObject *FinallyBlockContext_cls = NULL;
    PyObject *FinallyBlockCopyContext_cls = NULL;
    PyObject *MetadataContext_cls = NULL;
    PyObject *CategoryContext_cls = NULL;
    PyObject *InitializerlistContext_cls = NULL;
    PyObject *AssignmentContext_cls = NULL;
    PyObject *ExpressionBinaryModContext_cls = NULL;
    PyObject *ExpressionBinaryLessContext_cls = NULL;
    PyObject *ExpressionBinaryGreaterContext_cls = NULL;
    PyObject *ExpressionBinaryLessEqualContext_cls = NULL;
    PyObject *ExpressionArrayAccessContext_cls = NULL;
    PyObject *ExpressionBinaryLogicContext_cls = NULL;
    PyObject *ExpressionIntegerContext_cls = NULL;
    PyObject *ExpressionBinaryRightShiftContext_cls = NULL;
    PyObject *ExpressionMyselfContext_cls = NULL;
    PyObject *ExpressionPreviousContext_cls = NULL;
    PyObject *ExpressionIdentifierContext_cls = NULL;
    PyObject *ExpressionStructAccessContext_cls = NULL;
    PyObject *ExpressionFunctionCallContext_cls = NULL;
    PyObject *ExpressionBinaryMDContext_cls = NULL;
    PyObject *ExpressionStringContext_cls = NULL;
    PyObject *ExpressionGroupingContext_cls = NULL;
    PyObject *ExpressionExponentiationContext_cls = NULL;
    PyObject *ExpressionBinaryLeftShiftContext_cls = NULL;
    PyObject *ExpressionBinaryGreaterEqualContext_cls = NULL;
    PyObject *ExpressionZeroContext_cls = NULL;
    PyObject *ExpressionUnaryPMContext_cls = NULL;
    PyObject *ExpressionTrinaryLogicContext_cls = NULL;
    PyObject *ExpressionFloatContext_cls = NULL;
    PyObject *ExpressionPointerAccessContext_cls = NULL;
    PyObject *ExpressionBinaryEqualContext_cls = NULL;
    PyObject *ExpressionBinaryPMContext_cls = NULL;
    PyObject *ExpressionUnaryLogicContext_cls = NULL;
    PyObject *ShellContext_cls = NULL;
    PyObject *SearchPathContext_cls = NULL;
    PyObject *SearchShellContext_cls = NULL;
    PyObject *Unparsed_blockContext_cls = NULL;

    public:
    SA_McCompTranslator(speedy_antlr::Translator *translator);
    ~SA_McCompTranslator();
    antlrcpp::Any visitProg(McCompParser::ProgContext *ctx);

    antlrcpp::Any visitComponentDefineNew(McCompParser::ComponentDefineNewContext *ctx);

    antlrcpp::Any visitComponentDefineCopy(McCompParser::ComponentDefineCopyContext *ctx);

    antlrcpp::Any visitTraceBlock(McCompParser::TraceBlockContext *ctx);

    antlrcpp::Any visitTraceBlockCopy(McCompParser::TraceBlockCopyContext *ctx);

    antlrcpp::Any visitComponent_parameter_set(McCompParser::Component_parameter_setContext *ctx);

    antlrcpp::Any visitComponent_define_parameters(McCompParser::Component_define_parametersContext *ctx);

    antlrcpp::Any visitComponent_set_parameters(McCompParser::Component_set_parametersContext *ctx);

    antlrcpp::Any visitComponent_out_parameters(McCompParser::Component_out_parametersContext *ctx);

    antlrcpp::Any visitComponent_parameters(McCompParser::Component_parametersContext *ctx);

    antlrcpp::Any visitComponentParameterSymbol(McCompParser::ComponentParameterSymbolContext *ctx);

    antlrcpp::Any visitComponentParameterDoubleArray(McCompParser::ComponentParameterDoubleArrayContext *ctx);

    antlrcpp::Any visitComponentParameterDouble(McCompParser::ComponentParameterDoubleContext *ctx);

    antlrcpp::Any visitComponentParameterVector(McCompParser::ComponentParameterVectorContext *ctx);

    antlrcpp::Any visitComponentParameterInteger(McCompParser::ComponentParameterIntegerContext *ctx);

    antlrcpp::Any visitComponentParameterIntegerArray(McCompParser::ComponentParameterIntegerArrayContext *ctx);

    antlrcpp::Any visitComponentParameterString(McCompParser::ComponentParameterStringContext *ctx);

    antlrcpp::Any visitShareBlock(McCompParser::ShareBlockContext *ctx);

    antlrcpp::Any visitShareBlockCopy(McCompParser::ShareBlockCopyContext *ctx);

    antlrcpp::Any visitDisplayBlockCopy(McCompParser::DisplayBlockCopyContext *ctx);

    antlrcpp::Any visitDisplayBlock(McCompParser::DisplayBlockContext *ctx);

    antlrcpp::Any visitComponent_ref(McCompParser::Component_refContext *ctx);

    antlrcpp::Any visitCoords(McCompParser::CoordsContext *ctx);

    antlrcpp::Any visitReference(McCompParser::ReferenceContext *ctx);

    antlrcpp::Any visitDependency(McCompParser::DependencyContext *ctx);

    antlrcpp::Any visitDeclareBlock(McCompParser::DeclareBlockContext *ctx);

    antlrcpp::Any visitDeclareBlockCopy(McCompParser::DeclareBlockCopyContext *ctx);

    antlrcpp::Any visitUservars(McCompParser::UservarsContext *ctx);

    antlrcpp::Any visitInitializeBlock(McCompParser::InitializeBlockContext *ctx);

    antlrcpp::Any visitInitializeBlockCopy(McCompParser::InitializeBlockCopyContext *ctx);

    antlrcpp::Any visitSaveBlockCopy(McCompParser::SaveBlockCopyContext *ctx);

    antlrcpp::Any visitSaveBlock(McCompParser::SaveBlockContext *ctx);

    antlrcpp::Any visitFinallyBlock(McCompParser::FinallyBlockContext *ctx);

    antlrcpp::Any visitFinallyBlockCopy(McCompParser::FinallyBlockCopyContext *ctx);

    antlrcpp::Any visitMetadata(McCompParser::MetadataContext *ctx);

    antlrcpp::Any visitCategory(McCompParser::CategoryContext *ctx);

    antlrcpp::Any visitInitializerlist(McCompParser::InitializerlistContext *ctx);

    antlrcpp::Any visitAssignment(McCompParser::AssignmentContext *ctx);

    antlrcpp::Any visitExpressionBinaryMod(McCompParser::ExpressionBinaryModContext *ctx);

    antlrcpp::Any visitExpressionBinaryLess(McCompParser::ExpressionBinaryLessContext *ctx);

    antlrcpp::Any visitExpressionBinaryGreater(McCompParser::ExpressionBinaryGreaterContext *ctx);

    antlrcpp::Any visitExpressionBinaryLessEqual(McCompParser::ExpressionBinaryLessEqualContext *ctx);

    antlrcpp::Any visitExpressionArrayAccess(McCompParser::ExpressionArrayAccessContext *ctx);

    antlrcpp::Any visitExpressionBinaryLogic(McCompParser::ExpressionBinaryLogicContext *ctx);

    antlrcpp::Any visitExpressionInteger(McCompParser::ExpressionIntegerContext *ctx);

    antlrcpp::Any visitExpressionBinaryRightShift(McCompParser::ExpressionBinaryRightShiftContext *ctx);

    antlrcpp::Any visitExpressionMyself(McCompParser::ExpressionMyselfContext *ctx);

    antlrcpp::Any visitExpressionPrevious(McCompParser::ExpressionPreviousContext *ctx);

    antlrcpp::Any visitExpressionIdentifier(McCompParser::ExpressionIdentifierContext *ctx);

    antlrcpp::Any visitExpressionStructAccess(McCompParser::ExpressionStructAccessContext *ctx);

    antlrcpp::Any visitExpressionFunctionCall(McCompParser::ExpressionFunctionCallContext *ctx);

    antlrcpp::Any visitExpressionBinaryMD(McCompParser::ExpressionBinaryMDContext *ctx);

    antlrcpp::Any visitExpressionString(McCompParser::ExpressionStringContext *ctx);

    antlrcpp::Any visitExpressionGrouping(McCompParser::ExpressionGroupingContext *ctx);

    antlrcpp::Any visitExpressionExponentiation(McCompParser::ExpressionExponentiationContext *ctx);

    antlrcpp::Any visitExpressionBinaryLeftShift(McCompParser::ExpressionBinaryLeftShiftContext *ctx);

    antlrcpp::Any visitExpressionBinaryGreaterEqual(McCompParser::ExpressionBinaryGreaterEqualContext *ctx);

    antlrcpp::Any visitExpressionZero(McCompParser::ExpressionZeroContext *ctx);

    antlrcpp::Any visitExpressionUnaryPM(McCompParser::ExpressionUnaryPMContext *ctx);

    antlrcpp::Any visitExpressionTrinaryLogic(McCompParser::ExpressionTrinaryLogicContext *ctx);

    antlrcpp::Any visitExpressionFloat(McCompParser::ExpressionFloatContext *ctx);

    antlrcpp::Any visitExpressionPointerAccess(McCompParser::ExpressionPointerAccessContext *ctx);

    antlrcpp::Any visitExpressionBinaryEqual(McCompParser::ExpressionBinaryEqualContext *ctx);

    antlrcpp::Any visitExpressionBinaryPM(McCompParser::ExpressionBinaryPMContext *ctx);

    antlrcpp::Any visitExpressionUnaryLogic(McCompParser::ExpressionUnaryLogicContext *ctx);

    antlrcpp::Any visitShell(McCompParser::ShellContext *ctx);

    antlrcpp::Any visitSearchPath(McCompParser::SearchPathContext *ctx);

    antlrcpp::Any visitSearchShell(McCompParser::SearchShellContext *ctx);

    antlrcpp::Any visitUnparsed_block(McCompParser::Unparsed_blockContext *ctx);

};